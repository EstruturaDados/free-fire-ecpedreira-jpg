#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ITENS 10

// Estrutura que representa cada item do invent√°rio
typedef struct {
    char nome[30];
    char tipo[20];  // Ex: arma, muni√ß√£o, cura
    int quantidade;
} Item;

// Vari√°veis globais para armazenar os itens e o total atual
Item mochila[MAX_ITENS];
int totalItens = 0;

// --- Fun√ß√µes auxiliares --- //

// Cadastra um novo item na mochila
void inserirItem() {
    if (totalItens >= MAX_ITENS) {
        printf("\n‚ö†Ô∏è A mochila est√° cheia! N√£o √© poss√≠vel adicionar mais itens.\n");
        return;
    }

    Item novo;
    printf("\n=== Cadastro de Item ===\n");
    printf("Nome do item: ");
    scanf(" %[^\n]", novo.nome);  // L√™ string com espa√ßos
    printf("Tipo do item (arma, municao, cura, etc.): ");
    scanf(" %[^\n]", novo.tipo);
    printf("Quantidade: ");
    scanf("%d", &novo.quantidade);

    mochila[totalItens] = novo;
    totalItens++;

    printf("\n‚úÖ Item cadastrado com sucesso!\n");
}

// Remove um item da mochila pelo nome
void removerItem() {
    if (totalItens == 0) {
        printf("\n‚ö†Ô∏è A mochila est√° vazia! Nada para remover.\n");
        return;
    }

    char nomeRemover[30];
    printf("\n=== Remover Item ===\n");
    printf("Digite o nome do item que deseja remover: ");
    scanf(" %[^\n]", nomeRemover);

    for (int i = 0; i < totalItens; i++) {
        if (strcmp(mochila[i].nome, nomeRemover) == 0) {
            // Sobrescreve o item removido pelo √∫ltimo da lista
            mochila[i] = mochila[totalItens - 1];
            totalItens--;
            printf("\n‚úÖ Item '%s' removido com sucesso!\n", nomeRemover);
            return;
        }
    }
    printf("\n‚ö†Ô∏è Item '%s' n√£o encontrado na mochila.\n", nomeRemover);
}

// Lista todos os itens da mochila
void listarItens() {
    printf("\n=== Itens na Mochila ===\n");
    if (totalItens == 0) {
        printf("A mochila est√° vazia.\n");
        return;
    }

    for (int i = 0; i < totalItens; i++) {
        printf("%d) Nome: %s | Tipo: %s | Quantidade: %d\n",
               i + 1, mochila[i].nome, mochila[i].tipo, mochila[i].quantidade);
    }
}

// Busca um item pelo nome e exibe seus dados
void buscarItem() {
    if (totalItens == 0) {
        printf("\n‚ö†Ô∏è A mochila est√° vazia! N√£o h√° itens para buscar.\n");
        return;
    }

    char nomeBusca[30];
    printf("\n=== Buscar Item ===\n");
    printf("Digite o nome do item: ");
    scanf(" %[^\n]", nomeBusca);

    for (int i = 0; i < totalItens; i++) {
        if (strcmp(mochila[i].nome, nomeBusca) == 0) {
            printf("\nüîç Item encontrado!\n");
            printf("Nome: %s | Tipo: %s | Quantidade: %d\n",
                   mochila[i].nome, mochila[i].tipo, mochila[i].quantidade);
            return;
        }
    }
    printf("\n‚ö†Ô∏è Item '%s' n√£o encontrado.\n", nomeBusca);
}

// --- Fun√ß√£o principal --- //
int main() {
    int opcao;

    do {
        printf("\n====================\n");
        printf("   üéí Mochila do Jogador\n");
        printf("====================\n");
        printf("1 - Cadastrar Item\n");
        printf("2 - Remover Item\n");
        printf("3 - Listar Itens\n");
        printf("4 - Buscar Item\n");
        printf("0 - Sair\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                inserirItem();
                listarItens();
                break;
            case 2:
                removerItem();
                listarItens();
                break;
            case 3:
                listarItens();
                break;
            case 4:
                buscarItem();
                break;
            case 0:
                printf("\nüëã Saindo do sistema de invent√°rio...\n");
                break;
            default:
                printf("\n‚ö†Ô∏è Opcao inv√°lida. Tente novamente.\n");
        }

    } while (opcao != 0);

    return 0;
}
